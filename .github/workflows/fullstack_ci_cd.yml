name: Fullstack CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
      - test

jobs:
  # --------- BUILD STAGE ---------
  build:
    runs-on: self-hosted
    pool:
      name: 'Default'
      demands:
        - Agent.Name -equals LAPTOP-DROUUN5U
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # FRONTEND BUILD
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build

      # BACKEND BUILD
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build backend JAR
        run: |
          cd Backend
          ./mvnw clean package --no-transfer-progress

  # --------- TEST STAGE ---------
  test:
    runs-on: self-hosted
    needs: build
    pool:
      name: 'Default'
      demands:
        - Agent.Name -equals LAPTOP-DROUUN5U
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test frontend
        run: |
          cd frontend
          npm ci
          npm test

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Test backend
        run: |
          cd Backend
          ./mvnw test

  # --------- DEPLOY STAGE ---------
  deploy:
    runs-on: self-hosted
    needs: test
    pool:
      name: 'Default'
      demands:
        - Agent.Name -equals LAPTOP-DROUUN5U
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Deploy Frontend to Vercel
      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy frontend to Vercel
        run: |
          cd frontend
          vercel --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Deploy Backend to Azure App Service
      - name: Deploy backend to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: fringebooking
          publish-profile: ${{ secrets.AZURE_WEBAPP_BACKEND_PROFILE }}
          package: Backend/target/*.jar
