trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'
  demands:
    - Agent.Name -equals fringeagent-vm

variables:
  - group: vercel-deploy-group
  - name: node_version
    value: '18'

stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: BuildJob
        displayName: Build Frontend and Backend
        steps:
          - checkout: self

          # Install Node.js
          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)
            displayName: 'Install Node.js'

          # Cache node_modules to save time on install
          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | Frontend/package-lock.json'
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: 'Frontend/node_modules'
            displayName: 'Cache node_modules'

          # Faster install using npm ci
          - script: |
              npm ci
              npm run build
            workingDirectory: Frontend
            displayName: 'Build Frontend'

          # Build Backend
          - script: |
              mvn clean package
            workingDirectory: Backend
            displayName: 'Build Backend'

  - stage: Test
    dependsOn: Build
    displayName: Test Stage
    jobs:
      - job: TestJob
        displayName: Run Frontend Tests
        steps:
          - checkout: self

          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)
            displayName: 'Install Node.js'

          - script: |
              npm ci
              npm test
            workingDirectory: Frontend
            displayName: 'Run Frontend Tests'

          - task: PublishTestResults@2
            inputs:
              testResultsFiles: '**/test-results/junit.xml'
              testRunTitle: 'Frontend Unit Tests'
              failTaskOnMissingResultsFile: false
            condition: succeededOrFailed()
            displayName: 'Publish Test Results'

  - stage: Deploy
    dependsOn: Test
    displayName: Deploy Stage
    jobs:
      - job: DeployJob
        displayName: Deploy Frontend and Backend
        steps:
          - checkout: self

          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)
            displayName: 'Install Node.js'

          - script: npm install -g vercel
            displayName: 'Install Vercel CLI'

          - script: |
              cd Frontend
              vercel --prod --token $(VERCEL_TOKEN) --yes --name fringe-booking-project
            displayName: 'Deploy Frontend to Vercel'

          - task: DownloadSecureFile@1
            name: downloadProfile
            inputs:
              secureFile: 'fringebooking-profile'

          - task: AzureWebApp@1
            displayName: 'Deploy Backend to Azure'
            inputs:
              azureSubscription: 'Azure-FringeBooking-ARM'
              appType: 'webApp'
              appName: 'fringebooking'
              package: '$(System.DefaultWorkingDirectory)/Backend/target/adalaide-backend-0.0.1-SNAPSHOT.jar'
