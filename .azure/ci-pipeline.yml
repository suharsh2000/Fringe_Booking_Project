trigger:
- main  # Configure which branches trigger builds

pool:
  name: 'Default'  # This targets your self-hosted agent pool
  demands:
    - Agent.Name -equals java_pool
    
variables:
  javaVersion: '17'  # Adjust based on your Spring Boot application requirements
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  webAppName: 'your-spring-boot-app'  # Replace with your Azure App Service name
  packageFolder: '$(System.DefaultWorkingDirectory)/target'
  mavenGoal: 'package'
  mavenPomFile: 'pom.xml'  # Adjust if your pom file is in a different location

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build, Test and Package'
    steps:
    - task: Maven@3
      displayName: 'Maven Build & Test'
      inputs:
        mavenPomFile: '$(mavenPomFile)'
        goals: '$(mavenGoal)'
        options: '-DskipTests=false'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.$(javaVersion)'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(packageFolder)'
        Contents: '*.jar'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    displayName: 'Deploy to Azure App Service'
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzureCLI@2
      displayName: 'Create Service Connection & Deploy to Azure App Service'
      inputs:
        azureSubscription: 'Create New'  # We'll create this interactively since you don't have one
        scriptType: 'ps'  # PowerShell
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Create an Azure Service Principal for the connection
          Write-Host "Creating Service Principal for Azure DevOps..."
          $sp = az ad sp create-for-rbac --name "sp-devops-$(webAppName)" --role contributor --scopes /subscriptions/$(az account show --query id -o tsv)/resourceGroups/$(az webapp show --name $(webAppName) --query resourceGroup -o tsv) --sdk-auth
          
          # Store the service principal info securely in a variable group
          Write-Host "Creating Variable Group for service connection..."
          $serviceConnectionName = "sc-$(webAppName)"
          $serviceConnectionJson = $sp | ConvertFrom-Json
          
          # Deploy the application using ZIP deployment
          Write-Host "Deploying application to Azure App Service..."
          $package = Get-ChildItem -Path "$(System.ArtifactsDirectory)/drop" -Filter "*.jar" | Select-Object -First 1
          if ($package) {
            Write-Host "Deploying $($package.FullName) to $(webAppName)"
            az webapp deployment source config-zip --resource-group $(az webapp show --name $(webAppName) --query resourceGroup -o tsv) --name $(webAppName) --src $package.FullName
          } else {
            Write-Error "No JAR package found to deploy!"
            exit 1
          }