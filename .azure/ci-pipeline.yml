trigger:
  branches:
    include:
      - main
      - dev
      - test

pool:
  name: 'Default'
  demands:
    - Agent.Name -equals LAPTOP-DROUUN5U


variables:
  - group: vercel-deploy-group
  - name: node_version
    value: '18'


stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: BuildJob
        displayName: Build Frontend and Backend
        steps:
          - checkout: self

          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)
            displayName: 'Install Node.js'

          - script: |
              npm install
              npm run build
            workingDirectory: Frontend
            displayName: 'Build Frontend'


          - script: |
              echo JAVA_HOME=$JAVA_HOME
              java -version
              cd Backend
              ./mvnw.cmd clean package --no-transfer-progress
            displayName: 'Build Backend (Java + Maven)'

  - stage: Test
    dependsOn: Build
    displayName: Test Stage
    jobs:
      - job: TestJob
        displayName: Run Tests
        steps:
          - checkout: self

          - script: |
              npm ci
              npm test
            workingDirectory: Frontend
            displayName: 'Test Frontend'

          - script: |
              cd Backend
              ./mvnw.cmd test -e -X
            displayName: 'Test Backend'

          - task: PublishTestResults@2
            inputs:
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              testRunTitle: 'Backend Unit Tests'
              failTaskOnMissingResultsFile: false
            condition: succeededOrFailed()
            displayName: 'Publish Test Results'

  - stage: Deploy
    dependsOn: Test
    displayName: Deploy Stage
    jobs:
      - job: DeployJob
        displayName: Deploy Frontend and Backend
        steps:
          - checkout: self

          - script: npm install -g vercel
            displayName: 'Install Vercel CLI'

          - script: |
              cd Frontend
              vercel --prod --token $(VERCEL_TOKEN) --yes --name fringe-booking-project
            displayName: 'Relink and Deploy Frontend to Vercel'


          - task: DownloadSecureFile@1
            name: downloadProfile
            inputs:
              secureFile: 'fringebooking-profile'

          - task: PowerShell@2
            displayName: 'Build Backend (Java + Maven)'
            inputs:
            targetType: 'inline'
            script: |
              cd "$(System.DefaultWorkingDirectory)\Backend"
              ./mvnw.cmd clean package --no-transfer-progress


          - task: PowerShell@2
            displayName: 'Deploy Backend to Azure App Service (Spring Boot JAR)'
            inputs:
              targetType: 'inline'
              script: |
                $folder = "$(System.DefaultWorkingDirectory)\Backend\target"
                Write-Host "Searching for JAR in: $folder"
                $filePath = Get-ChildItem $folder -Filter *.jar | Select-Object -ExpandProperty FullName

                if (-not $filePath) {
                Write-Error "No JAR file found in $folder"
                exit 1
                }              
                $publishProfile = Get-Content "$(publishProfile.secureFilePath)" -Raw
                $profileXml = [xml]$publishProfile
                $userName = $profileXml.publishData.publishProfile.userName
                $password = $profileXml.publishData.publishProfile.userPWD
                $deployUrl = $profileXml.publishData.publishProfile.publishUrl
                Invoke-WebRequest -Uri "https://$deployUrl/api/zipdeploy" `
                                  -Method POST `
                                  -InFile $filePath `
                                  -Headers @{"Content-Type"="application/octet-stream"} `
                                  -Credential (New-Object System.Management.Automation.PSCredential($userName, (ConvertTo-SecureString $password -AsPlainText -Force)))



