trigger:
  branches:
    include:
      - main
      - dev
      - test

pool:
  name: 'Default'
  demands:
    - Agent.Name -equals LAPTOP-DROUUN5U

variables:
  node_version: '18'

stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: BuildJob
        displayName: Build Frontend and Backend
        steps:
          - checkout: self

          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)
            displayName: 'Install Node.js'

          - script: |
              cd frontend
              npm install
              npm run build
            displayName: 'Build Frontend'

          - script: |
              echo JAVA_HOME=$JAVA_HOME
              java -version
              cd Backend
              ./mvnw.cmd clean package --no-transfer-progress
            displayName: 'Build Backend (Java + Maven)'

  - stage: Test
    dependsOn: Build
    displayName: Test Stage
    jobs:
      - job: TestJob
        displayName: Run Tests
        steps:
          - checkout: self

          - script: |
              cd frontend
              npm ci
              npm test
            displayName: 'Test Frontend'

          - script: |
              cd Backend
              ./mvnw.cmd test
            displayName: 'Test Backend'

  - stage: Deploy
    dependsOn: Test
    displayName: Deploy Stage
    jobs:
      - job: DeployJob
        displayName: Deploy Frontend and Backend
        steps:
          - checkout: self

          - script: npm install -g vercel
            displayName: 'Install Vercel CLI'

          - script: |
              cd frontend
              vercel --prod --token $(VERCEL_TOKEN)
            displayName: 'Deploy Frontend to Vercel'

          - task: DownloadSecureFile@1
            name: downloadProfile
            inputs:
              secureFile: 'fringebooking-profile'

          - task: AzureWebApp@1
            displayName: 'Deploy Backend to Azure App Service'
            inputs:
              appType: 'webApp'
              appName: 'fringebooking'
              package: '$(System.DefaultWorkingDirectory)/Backend/target/*.jar'
              deployToSlotOrASE: false
              usePublishProfile: true
              publishProfile: '$(downloadProfile.secureFilePath)'
